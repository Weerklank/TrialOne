{"version":3,"sources":["Calendar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["_default","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dateContext","moment","today","showMonthPopup","showYearPopup","selectedDay","weekdays","weekdaysShort","months","year","format","month","console","log","daysInMonth","currentDate","get","currentDay","parseInt","showYearEditor","setState","showYearNav","setYear","assign","set","onYearChange","e","target","value","onKeyUpYear","which","YearNav","react_default","a","createElement","defaultValue","className","ref","yearInput","onKeyUp","onChange","type","placeholder","onClick","onDayClick","day","width","style","_this2","map","key","blanks","i","firstDayofMonth","push","_loop","d","currentMonth","Date","getMonth","selectedClass","totalSlots","concat","rows","cells","forEach","row","insertRow","slice","length","trElems","colSpan","MonthNav","prevMonth","nextMonth","React","Component","App","Calendar_default","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.db825e14.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport './calendar.css';\n\nexport default class extends React.Component {\n\tstate = {\n\t\tdateContext: moment(),\n\t\ttoday: moment(),\n\t\tshowMonthPopup: false,\n\t\tshowYearPopup: false,\n\t\tselectedDay: null\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.width = props.width || '350px';\n\t\tthis.style = props.style || {};\n\t\tthis.style.width = this.width;\n\t}\n\n\t//sets the state, current date\n\n\tweekdays = moment.weekdays();\n\tweekdaysShort = moment.weekdaysShort();\n\tmonths = moment.months();\n\n\tyear = () => {\n\t\treturn this.state.dateContext.format('Y');\n\t};\n\tmonth = () => {\n\t\tconsole.log('month is' + this.state.dateContext.format('MMMM'));\n\t\treturn this.state.dateContext.format('MMMM ');\n\t};\n\tdaysInMonth = () => {\n\t\treturn this.state.dateContext.daysInMonth();\n\t};\n\tcurrentDate = () => {\n\t\treturn this.state.dateContext.get('date');\n\t};\n\tcurrentDay = () => {\n\t\treturn parseInt(this.state.dateContext.format('D'));\n\t};\n\n\t//month setup moved month.js thru line 123\n\n\t// firstDayofMonth = () => {\n\t// \tlet dateContext = this.state.dateContext;\n\t// \tlet firstDay = moment(dateContext).startOf('month').format('d');\n\t// \treturn firstDay;\n\t// };\n\n\t// setMonth = month => {\n\t// \tlet monthNo = this.months.indexOf(month);\n\t// \tlet dateContext = Object.assign({}, this.state.dateContext);\n\t// \tdateContext = moment(dateContext).set('month', monthNo);\n\t// \tthis.setState({\n\t// \t\tdateContext: dateContext\n\t// \t});\n\t// };\n\n\t// nextMonth = () => {\n\t// \tlet dateContext = Object.assign({}, this.state.dateContext);\n\t// \tdateContext = moment(dateContext).add(1, 'month');\n\t// \tthis.setState({\n\t// \t\tdateContext: dateContext\n\t// \t});\n\t// \tthis.props.onNextMonth && this.props.onMonthChange();\n\t// };\n\n\t// prevMonth = () => {\n\t// \tlet dateContext = Object.assign({}, this.state.dateContext);\n\t// \tdateContext = moment(dateContext).subtract(1, 'month');\n\t// \tthis.setState({\n\t// \t\tdateContext: dateContext\n\t// \t});\n\t// \tthis.props.onPrevMonth && this.props.onMonthChange();\n\t// };\n\n\t// // changes the month\n\t// onSelectChange = (e, data) => {\n\t// \tthis.setMonth(data);\n\t// \tthis.props.onMonthChange && this.props.onMonthChange();\n\t// };\n\n\t// SelectList = props => {\n\t// \tlet popup = props.data.map(data => {\n\t// \t\treturn (\n\t// \t\t\t<div key={data}>\n\t// \t\t\t\t<a\n\t// \t\t\t\t\thref=\" # \"\n\t// \t\t\t\t\tonClick={e => {\n\t// \t\t\t\t\t\tthis.onSelectChange(e, data);\n\t// \t\t\t\t\t}}\n\t// \t\t\t\t>\n\t// \t\t\t\t\t{data}\n\t// \t\t\t\t</a>\n\t// \t\t\t</div>\n\t// \t\t);\n\t// \t});\n\n\t// \treturn <div className=\"month-popup\">{popup}</div>;\n\t// };\n\n\t// onChangeMonth = (e, month) => {\n\t// \tthis.setState({\n\t// \t\tshowMonthPopup: !this.state.showMonthPopup\n\t// \t});\n\t// };\n\n\t// MonthNav = () => {\n\t// \treturn (\n\t// \t\t<span\n\t// \t\t\tclassName=\"label-month \"\n\t// \t\t\tonClick={e => {\n\t// \t\t\t\tthis.onChangeMonth(e, this.month());\n\t// \t\t\t}}\n\t// \t\t>\n\t// \t\t\t{this.month()}\n\t// \t\t\t{this.state.showMonthPopup && <this.SelectList data={this.months} />}\n\t// \t\t</span>\n\t// \t);\n\t// };\n\n\t// Year\n\tshowYearEditor = () => {\n\t\tthis.setState({\n\t\t\tshowYearNav: true\n\t\t});\n\t};\n\n\tsetYear = year => {\n\t\tlet dateContext = Object.assign({}, this.state.dateContext);\n\t\tdateContext = moment(dateContext).set('year', year);\n\t\tthis.setState({\n\t\t\tdateContext: dateContext\n\t\t});\n\t};\n\n\tonYearChange = e => {\n\t\tthis.setYear(e.target.value);\n\t\tthis.props.onYearChange && this.props.onYearChange(e, e.target.value);\n\t};\n\n\tonKeyUpYear = e => {\n\t\tif (e.which > 0 || e.which < 2100) {\n\t\t\tthis.setYear(e.target.value);\n\t\t\tthis.setState({\n\t\t\t\tshowYearNav: false\n\t\t\t});\n\t\t}\n\t};\n\tYearNav = () => {\n\t\treturn this.state.showYearNav ? (\n\t\t\t<input\n\t\t\t\tdefaultValue={this.year()}\n\t\t\t\tclassName=\"editor-year\"\n\t\t\t\tref={yearInput => {\n\t\t\t\t\tthis.yearInput = yearInput;\n\t\t\t\t}}\n\t\t\t\tonKeyUp={e => this.onKeyUpYear(e)}\n\t\t\t\tonChange={e => this.onYearChange(e)}\n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"year\"\n\t\t\t/>\n\t\t) : (\n\t\t\t<span\n\t\t\t\tclassName=\"label-year\"\n\t\t\t\tonClick={e => {\n\t\t\t\t\tthis.showYearEditor();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.year()}\n\t\t\t</span>\n\t\t);\n\t};\n\n\t//selects the day\n\n\tonDayClick = (e, day) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tselectedDay: day\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconsole.log('SELECTED DAY: ', this.state.selectedDay, this.state.dateContext.format('MMMM'), this.state.dateContext.format('YYYY'));\n\t\t\t}\n\t\t);\n\t};\n\n\trender() {\n\t\tlet weekdays = this.weekdaysShort.map(day => {\n\t\t\treturn (\n\t\t\t\t<td key={day} className=\"week-day\">\n\t\t\t\t\t{day}\n\t\t\t\t</td>\n\t\t\t);\n\t\t});\n\n\t\t//for empty spots in the calendar\n\n\t\tlet blanks = [];\n\t\tfor (let i = 0; i < this.firstDayofMonth(); i++) {\n\t\t\tblanks.push(\n\t\t\t\t<td key={i * 80} className=\"emptySlot\">\n\t\t\t\t\t{' '}\n\t\t\t\t</td>\n\t\t\t);\n\t\t}\n\n\t\tlet daysInMonth = [];\n\t\tconsole.log('d', this.daysInMonth());\n\t\tfor (let d = 1; d <= this.daysInMonth(); d++) {\n\t\t\tvar currentMonth = new Date().getMonth();\n\t\t\tvar displayMonth = this.state.dateContext.month();\n\t\t\tlet className = '';\n\t\t\tif (displayMonth === currentMonth && d === this.currentDate()) className = 'day current-day';\n\t\t\telse {\n\t\t\t\tclassName = 'day';\n\t\t\t}\n\n\t\t\tlet selectedClass = d === this.state.selectedDay ? ' selected-day ' : ' ';\n\t\t\tdaysInMonth.push(\n\t\t\t\t<td key={d} className={className + selectedClass}>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\tthis.onDayClick(e, d);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{d}\n\t\t\t\t\t</span>\n\t\t\t\t</td>\n\t\t\t);\n\t\t}\n\n\t\tvar totalSlots = [...blanks, ...daysInMonth];\n\t\tlet rows = [];\n\t\tlet cells = [];\n\n\t\ttotalSlots.forEach((row, i) => {\n\t\t\tif (i % 7 !== 0) {\n\t\t\t\tcells.push(row);\n\t\t\t} else {\n\t\t\t\tlet insertRow = cells.slice();\n\t\t\t\trows.push(insertRow);\n\t\t\t\tcells = [];\n\t\t\t\tcells.push(row);\n\t\t\t}\n\t\t\tif (i === totalSlots.length - 1) {\n\t\t\t\tlet insertRow = cells.slice();\n\t\t\t\trows.push(insertRow);\n\t\t\t}\n\t\t});\n\n\t\tlet trElems = rows.map((d, i) => {\n\t\t\treturn <tr key={i * 100}>{d}</tr>;\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"calendar-container\" style={this.style}>\n\t\t\t\t<table className=\"calendar\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className=\"calendar-header\">\n\t\t\t\t\t\t\t<td colSpan=\"5\">\n\t\t\t\t\t\t\t\t<this.MonthNav /> <this.YearNav />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td colSpan=\"2\" className=\"nav-month\">\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"prev fa fa-fw fa-chevron-circle-left\"\n\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\tthis.prevMonth();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"prev fa fa-fw fa-chevron-circle-right\"\n\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\tthis.nextMonth();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>{weekdays}</tr>\n\t\t\t\t\t\t{trElems}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Calendar from \"./Calendar\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <Calendar/>\n        <h2>Welcome to React</h2>\n      </div>\n      <p className=\"App-intro\">\n        To get started, edit <code>src/App.js</code> and save to reload.\n      </p>\n    </div>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}